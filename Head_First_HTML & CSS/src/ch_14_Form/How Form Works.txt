表单如何工作：

1、	当你访问一个包含HTML表的web页面，填写表单，然后提交
	浏览器将表单中的所有数据打包，把这些数据发送到web服务器。
	web服务器接受到表单数据传给一个服务器脚本进行处理。
2、	服务器脚本处理表单中的数据，然后创建一个全新的HTML页面作为相应，再将这个页面传回服务器。
	浏览器收到相应，并显示这个页面。
	
表单在浏览器中如何工作：
对于浏览器而言，表单只是页面中的一些HTML。

1、	浏览器加载页面的HTML，遇到表单元素时，它会在页面上创建控件，允许你输入各种各样的数据。
	控件就是类似于按钮、文本输入框或下拉菜单之类的工具。这些控件允许你输入数据。
2、	用户使用控件输入数据。
3、	用户提交表单。浏览器看到这个线索时就会知道它需要打包的数据。浏览器打包好数据并把这些数据发送到服务器上。
4、	服务器得到表单数据，会把这些数据传递给适当的服务器脚本进行处理。这个处理的结果时一个全新的HTML页面，它将
	返回给浏览器，由于返回的也是一个HTML，所有浏览器会直接显示这个页面。

表单的编写应该针对服务器的脚本进行编写。
====================================================================================================
几乎所有的块级元素都可放在<form>中。

<form>元素分析：
例子：
<form action="http://wickedlysmart.com/hfhtmlcss/contest.php" method="POST"> </form>

action属性：包含web服务器的URL
method属性：确定表单数据如何发送得到服务器，通常常用的方法是使用post。还有其它的方法。

常用的表单元素：
1、文本输入：
text <input>，使用type指定类型为“text”。它还有一些可选属性，允许你为这个控件设置最大字符数个数和宽度。
<input type="text" name="fullname" maxLength="200">
2、提交输入：
submit <input>，同样使用<input>元素，但是type指定为“submit”。submit<input>元素会创建一个按钮，允许你提交表单。
点击这个按钮时，浏览器会把表单发送到服务器脚本进行处理。
3、单选钮输入：
radio <input>元素会创建包含多个按钮的控件，但是一次只能选择其中一个按钮。
每个选项使用一个radio <input>，与一组给定选项关联的单选钮必须有相同的名字，但是每个选项可以有不同的值。
<input type="radio" name="hotornot" value="Hot">
<input type="radio" name="hotornot" value="notHot">
4、复选框输入
checkbox <input>元素会创建一个复选框控件，可以选中也可以不选中。
相关复选框也共用一个名字。
<input type="checkbox" name="spice" value="Salt">
<input type="checkbox" name="spice" value="Pepper">
<input type="checkbox" name="spice" value="Garlic">
5、文本区域
<textarea>元素会创建一个多行的文本区，可以在其中输入多行文本。如果输入的文本在文本区放不下右边还会出现一个滚动条。
<textarea>不是一个void元素，所以有结束标记。
<textarea name="comments" rows="10" cols="48"></textarea>
6、菜单
<select>元素会在web页面中创建一个菜单控件。菜单提供了一种从一组选项中做出选择的方法。
需要与<option>元素组合使用。
7、菜单项
<option>元素与<select>元素结合使用可以创建菜单。使用<option>元素来表示菜单项。

<select name="characters">
	<option value="Buckaroo">Buckaroo Banzai</option>
	<option value="Taco">Tacolotte</option>
	<option value="Wisses">Wisseslita</option>
</select>

<option>元素的内容用作菜单项的描述。每个菜单项还可以包含一个表示这个项的值。
8、数字输入
number <input>会限制只能输入数字。可以指定输入的极值。
<input type="number" min="0" max="20">
9、范围输入
range <input>元素类词语number，只是它会显示一个滑动条，而不是一个输入框。
number和range都有一个可选属性step。
<input type="range" min="0" max="20" step="5">
10、颜色输入
color <input>可以指定一个颜色。单机这个控件时会弹出一个颜色选择器，允许你原则一个颜色，而不必输入颜色名或值。
如果浏览器不支持颜色输入元素你会得到一个常规的文本输入控件。
<input type="color">
11、日期输入
date <input>元素可以利用一个日期选择控件指定日期。这个控件会创建一个合法的日期格式串，发送到服务器脚本。
与颜色输入元素类似，如果浏览器不支持日期输入元素，你会得到一个常规的文本输入控件。
<input type="date">
12、email输入
email <input>元素就是一个文本输入元素，只不过在一些移动浏览器上，开始输入email时你会得到一个方便输入email的定制键盘。
13、tel输入
tel <input>元素也只是一个文本输入元素。与email类似会得到一个定制键盘。
<input type="tel">
14、url输入
url <input>元素只是一个文本输入元素。与email类似会得到一个定制键盘。
====================================================================================================
浏览器使用的主要方法有两种：POST和GET
POST：浏览器对所有表单数据进行打包并作为请求的一部分发送，对用户是不可见的。
GET：表单数据会追加到url本身上，对用户是可见的。

如何选择：P679
====================================================================================================
关于可访问性和表单中的其它可选元素：P688-691